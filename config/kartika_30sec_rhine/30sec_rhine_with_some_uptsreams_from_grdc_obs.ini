[globalOptions]

# Please set the pcrglobwb output directory (outputDir) in an absolute path.
#~ outputDir = MAIN_OUTPUT_DIR
outputDir    = /scratch-shared/edwin/test_rhine30sec/test_with_upstreams_from_grdc/

# Set the input directory map in an absolute path. 
#~ # - on eejit
#~ inputDir  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/
# - on snellius
inputDir     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/

# Map of clone (must be provided in PCRaster maps)
cloneMap     = global_30sec/cloneMaps/RhineMeuse30sec.clone.map

# The area/landmask of interest:
#~ landmask  = None
landmask     = /scratch-shared/edwin/create_landmask_rhine_for_kartika/landmask_rhine_until_lobith_without_some_upstreams.map

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB 2 output - test
description = test

# Format: YYYY-MM-DD ; The model runs on daily time step.
#~ startTime = STARTING_DATE
#~ endTime   = END_DATE
startTime = 1979-01-01
endTime   = 2019-12-31

# spinning up options:
#~ maxSpinUpsInYears = NUMBER_OF_SPINUP_YEARS
#~ maxSpinUpsInYears = 20
maxSpinUpsInYears = 0
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0

# option/directory for saving the spin-up directory 
spinUpOutputDir = True



[meteoOptions]

precipitationNC = /projects/0/dfguu/users/edwin/data/isimip_forcing/isimip3a_version_2021-09-XX/copied_on_2021-09-XX/GSWP3-W5E5/merged/gswp3-w5e5_obsclim_pr_global_daily_1901_2019_version_2021-09-XX.nc
temperatureNC   = /projects/0/dfguu/users/edwin/data/isimip_forcing/isimip3a_version_2021-09-XX/copied_on_2021-09-XX/GSWP3-W5E5/merged/gswp3-w5e5_obsclim_tas_global_daily_1901_2019_version_2021-09-XX.nc

referenceETPotMethod = Input
refETPotFileNC       = /projects/0/dfguu/users/edwin/pcrglobwb_wri_aqueduct_2021_et0_daily_merged/version_2021-09-16_et0_merged/referencePotET_gswp3-w5e5_dailyTot_output_1960-2019.nc

# variable names in the forcing files
precipitationVariableName = pr
temperatureVariableName   = tas
referenceEPotVariableName = reference_potential_evaporation

# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 and degree Celcius                                                                                                           
precipitationConstant    = 0.0
precipitationFactor      = 86.4
temperatureConstant      = -273.15
temperatureFactor        = 1.0
referenceEPotConstant = 0.0
referenceEPotFactor   = 1.0

# initial conditions - dummy - not really required
avgAnnualDiurnalDeltaTempIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgAnnualDiurnalDeltaTemp_1979-12-31.map
avgAnnualPrecipitationIni    = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgAnnualPrecipitation_1979-12-31.map
avgAnnualTemperatureIni      = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgAnnualTemperature_1979-12-31.map


[meteoDownscalingOptions]

downscalePrecipitation  = False
downscaleTemperature    = True
downscaleReferenceETPot = False

# downscaling (based on the digital elevation model):                                                                                                            
highResolutionDEM    = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dem_average_topography_parameters_30sec_february_2021_global_covered_with_zero.nc

# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.                                                    
meteoDownscaleIds    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/uniqueIds_30min.nc 
#global_30sec/meteo/unique_ids/unique_ids_5_arcmin_correct_lats.nc

# lapse rates:                                                                                                                                                   
temperLapseRateNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/temperature_slope.nc                                                                     
precipLapseRateNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/precipitation_slope.nc                                                                   
                                                                                                                                                                 
# downscaling criteria (TODO: remove these):                                                                                                                     
temperatCorrelNC     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/temperature_correl.nc                                                                     
precipitCorrelNC     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/precipitation_correl.nc                                                                   

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
smoothingWindowsLength = 0


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# topography parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  

topographyNC = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/topography_parameters_30sec_february_2021_global_covered_with_zero.nc

soilPropertiesNC = None
# - if soilPropertiesNC = None, the following soil parameters will be used
firstStorDepth       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/layerDepth_average_1_europe_30sec.nc
secondStorDepth      = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/layerDepth_average_2_europe_30sec.nc
soilWaterStorageCap1 = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/WHC_average_1_europe_30sec.nc
soilWaterStorageCap2 = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/WHC_average_2_europe_30sec.nc
airEntryValue1       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/psiAir_average_1_europe_30sec.nc
airEntryValue2       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/psiAir_average_2_europe_30sec.nc
poreSizeBeta1        = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/BCH_average_1_europe_30sec.nc
poreSizeBeta2        = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/BCH_average_2_europe_30sec.nc
resVolWC1            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcRes_average_1_europe_30sec.nc
resVolWC2            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcRes_average_2_europe_30sec.nc
satVolWC1            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcSat_average_1_europe_30sec.nc
satVolWC2            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcSat_average_2_europe_30sec.nc
KSat1                = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/kSat_average_1_europe_30sec.nc
KSat2                = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/kSat_average_2_europe_30sec.nc

percolationImp       = global_30sec/landSurface/soil/impeded_drainage/global_30sec_impeded_drainage_permafrost_dsmw_correct_lats.nc
includeIrrigation    = True

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = /projects/0/dfguu/users/edwin/data/irrigated_area_30sec_hectar_meier_g_aei_1900_2015_v20250211/irrigated_area_30sec_hectar_meier_g_aei_1900_2015_v20250211.nc


# land cover classes
landCoverTypes = naturalVegetationAndRainFedCrops,irrPaddy,irrNonPaddy

# we have to correct land cover fractions
noLandCoverFractionCorrection = False

# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/efficiency.nc

includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True

# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/historical_and_ssp_files/domestic_water_demand_historical_1960-2019.nc

#global_05min_from_gmd_paper_input/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/historical_and_ssp_files/industry_water_demand_historical_1960-2019.nc

#global_05min_from_gmd_paper_input/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile =  /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/livestock_water_demand_05min.nc
#global_05min_from_gmd_paper_input/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc


# desalination water supply (maximum/potential/capacity)
desalinationWater = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/desalination_water_version_april_2015.nc
#global_05min_from_gmd_paper_input/waterUse/desalination/desalination_water_version_april_2015.nc

# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/abstraction_zones_60min_05min.nc

# pcraster maps defining the partitioning of groundwater - surface water source 
#
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/AEI_SWFRAC.nc
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/AEI_QUAL.nc

# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation = 0.70

# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/max_city_sw_fraction.nc

# option to skip extrapolation
noParameterExtrapolation = True


[naturalVegetationAndRainFedCropsOptions]
name = naturalVegetationAndRainFedCrops
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_crop_coefficient.nc
interceptCapNC    = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_intercept_capacity.nc
coverFractionNC   = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = 1.0
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/rfrac1_all.nc
rootFraction2     = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/rfrac2_all.nc	
maxRootDepth      = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/meanrootdepth_all.nc
# Note: The maxRootDepth is not used for non irrigated land cover types. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interceptStor_naturalVegetationAndRainFedCrops_1979-12-31.map
snowCoverSWEIni  = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowCoverSWE_naturalVegetationAndRainFedCrops_1979-12-31.map
snowFreeWaterIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowFreeWater_naturalVegetationAndRainFedCrops_1979-12-31.map
topWaterLayerIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//topWaterLayer_naturalVegetationAndRainFedCrops_1979-12-31.map
storUppIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storUpp_naturalVegetationAndRainFedCrops_1979-12-31.map
storLowIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storLow_naturalVegetationAndRainFedCrops_1979-12-31.map
interflowIni     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interflow_naturalVegetationAndRainFedCrops_1979-12-31.map


noParameterExtrapolation = True


[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
#
fracVegCover     = global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_paddy_fraction_30sec.nc
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = 1.0
#global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
rootFraction2    = 0.0
#global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002


cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/paddy_cropfactor_filled.nc         
coverFractionNC   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/paddy_groundcover_filled.nc
interceptCapNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/paddy_interceptionstorage_filled.nc        


noParameterExtrapolation = True

# initial conditions:
interceptStorIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interceptStor_irrPaddy_1979-12-31.map
snowCoverSWEIni  = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowCoverSWE_irrPaddy_1979-12-31.map
snowFreeWaterIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowFreeWater_irrPaddy_1979-12-31.map
topWaterLayerIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//topWaterLayer_irrPaddy_1979-12-31.map
storUppIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storUpp_irrPaddy_1979-12-31.map
storLowIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storLow_irrPaddy_1979-12-31.map
interflowIni     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interflow_irrPaddy_1979-12-31.map


[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_non_paddy_fraction_30sec.nc
minSoilDepthFrac = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_minSoilDepthFrac_filled.map
maxSoilDepthFrac = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_maxSoilDepthFrac_filled.map
rootFraction1    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_rootfraction_z1_filled.map
rootFraction2    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_rootfraction_z2_filled.map
maxRootDepth     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_maxSoilDepth_filled.map
arnoBeta = None


# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
## other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002


cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_cropfactor_filled.nc         
coverFractionNC   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_groundcover_filled.nc
interceptCapNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/nonpaddy_interceptionstorage_filled.nc        


noParameterExtrapolation = True

# initial conditions:
interceptStorIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interceptStor_irrNonPaddy_1979-12-31.map
snowCoverSWEIni  = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowCoverSWE_irrNonPaddy_1979-12-31.map
snowFreeWaterIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//snowFreeWater_irrNonPaddy_1979-12-31.map
topWaterLayerIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//topWaterLayer_irrNonPaddy_1979-12-31.map
storUppIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storUpp_irrNonPaddy_1979-12-31.map
storLowIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storLow_irrNonPaddy_1979-12-31.map
interflowIni     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//interflow_irrNonPaddy_1979-12-31.map


[groundwaterOptions]
debugWaterBalance = True

#~ groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
groundwaterPropertiesNC    = None
#
recessionCoeff = global_30sec/groundwater/properties/version_202102XX/recession_coefficient_30sec.nc
kSatAquifer    = global_30sec/groundwater/properties/version_202102XX/k_conductivity_aquifer_filled_30sec.nc
specificYield  = global_30sec/groundwater/properties/version_202102XX/specific_yield_aquifer_filled_30sec.nc
#
# minimum value for groundwater recession coefficient (day-1) 
# - about 11 years
minRecessionCoeff = 0.00025
#~ # - about 27 years
#~ minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = global_30sec/groundwater/aquifer_thickness_estimate/version_2020-09-XX/thickness_05min_remapbil_to_30sec_filled_with_pcr_correct_lat.nc
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

doNotExtrapolateThickness = True
noParameterExtrapolation  = True

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/gw_pumping_capacity_1960-2100.nc
#/projects/0/dfguu/users/edwin/data/pcrglobwb_input_aqueduct/version_2021-09-16/general/regional_abstraction_limit.nc
# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater    = False
#global_05min_from_gmd_paper_input/waterUse/abstraction_zones/abstraction_zones_30min_05min.nc
#~ allocationSegmentsForGroundwater = False


# initial conditions:
#~ storGroundwaterFossilIni                  = Maximum
storGroundwaterFossilIni                     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storGroundwaterFossil_1979-12-31.map
storGroundwaterIni                           = /scratch-shared/kdirayati/Rhine_30sec_ori/states//storGroundwater_1979-12-31.map
avgNonFossilGroundwaterAllocationLongIni     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgNonFossilGroundwaterAllocationLong_1979-12-31.map
avgNonFossilGroundwaterAllocationShortIni    = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgNonFossilGroundwaterAllocationShort_1979-12-31.map
avgTotalGroundwaterAbstractionIni            = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgTotalGroundwaterAbstraction_1979-12-31.map
avgTotalGroundwaterAllocationLongIni         = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgTotalGroundwaterAllocationLong_1979-12-31.map
avgTotalGroundwaterAllocationShortIni        = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgTotalGroundwaterAllocationShort_1979-12-31.map
relativeGroundwaterHeadIni                   = /scratch-shared/kdirayati/Rhine_30sec_ori/states//relativeGroundwaterHead_1979-12-31.map
baseflowIni                                  = /scratch-shared/kdirayati/Rhine_30sec_ori/states//baseflow_1979-12-31.map
avgStorGroundwaterIni                        = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgStorGroundwater_1979-12-31.map


[routingOptions]
debugWaterBalance = True

# drainage direction map
lddMap      = global_30sec/routing/surface_water_bodies/version_2020-05-XX/lddsound_30sec_version_202005XX_correct_lat.nc

# cell area (unit: m2)
cellAreaMap = global_30sec/routing/cell_area/cdo_grid_area_30sec_map_correct_lat.nc 

# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = False

# manning coefficient for floodplain
floodplainManningsN = 0.07

# channel gradient
gradient             = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/channel_gradient_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# constant channel depth 
constantChannelDepth = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_depth_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# constant channel width (optional)
constantChannelWidth = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# minimum channel width (optional)
minimumChannelWidth  = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 

# files for relative elevation (above minimum dem) 
relativeElevationFiles  = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dzRel%04d_topography_parameters_30sec_february_2021_global_covered_with_zero.nc
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min_from_gmd_paper_input/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
includeWaterBodies        = True
waterBodyInputNC          = global_30sec/routing/surface_water_bodies/version_2020-05-XX/lakes_and_reservoirs_30sec_global_2019_version_202005XX.nc
onlyNaturalWaterBodies    = False

# initial conditions:
waterBodyStorageIni            = /scratch-shared/kdirayati/Rhine_30sec_ori/states//waterBodyStorage_1979-12-31.map
channelStorageIni              = /scratch-shared/kdirayati/Rhine_30sec_ori/states//channelStorage_1979-12-31.map
readAvlChannelStorageIni       = /scratch-shared/kdirayati/Rhine_30sec_ori/states//readAvlChannelStorage_1979-12-31.map
avgDischargeLongIni            = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgDischargeLong_1979-12-31.map
avgDischargeShortIni           = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgDischargeShort_1979-12-31.map
m2tDischargeLongIni            = /scratch-shared/kdirayati/Rhine_30sec_ori/states//m2tDischargeLong_1979-12-31.map
avgBaseflowLongIni             = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgBaseflowLong_1979-12-31.map
riverbedExchangeIni            = /scratch-shared/kdirayati/Rhine_30sec_ori/states//riverbedExchange_1979-12-31.map
subDischargeIni                = /scratch-shared/kdirayati/Rhine_30sec_ori/states//subDischarge_1979-12-31.map
avgLakeReservoirInflowShortIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgLakeReservoirInflowShort_1979-12-31.map
avgLakeReservoirOutflowLongIni = /scratch-shared/kdirayati/Rhine_30sec_ori/states//avgLakeReservoirOutflowLong_1979-12-31.map
timestepsToAvgDischargeIni     = /scratch-shared/kdirayati/Rhine_30sec_ori/states//timestepsToAvgDischarge_1979-12-31.map

#~ upstream_discharge_input_files = CLONE_CONNECTIONS
#~ upstream_discharge_input_files = /gpfs/scratch1/shared/kdirayati/create_netcdf/selectedRhine_daily_30sec.nc
upstream_discharge_input_files    = /scratch-shared/edwin/create_landmask_rhine_for_kartika/selectedRhine_daily_30sec_without_lobith.nc

[reportingOptions]

# landmask for reporting
#~ landmask_for_reporting = /scratch/depfg/7006713/pcrglob_30sec_global/cloneMaps/landMask/mask_CLONEMAP.map
landmask_for_reporting    = /scratch-shared/edwin/create_landmask_rhine_for_kartika/landmask_rhine_until_lobith_without_some_upstreams.map

# output files that will be written in the disk in netcdf files:
# - daily resolution
#~ outDailyTotNC = snowCoverSWE,satDegUpp,satDegLow,discharge,gwRecharge
outDailyTotNC = discharge
outMonthTotNC = interceptEvap,topWaterLayerEvap,actBareSoilEvap,irrGrossDemand,actTranspiUppTotal,actTranspiLowTotal,directRunoff,interflowTotal,waterBodyActEvaporation,baseflow,surfaceWaterInf,surfaceWaterAbstraction,nonIrrReturnFlow,nonIrrGrossDemand,irrGrossDemand,desalinationAbstraction,fossilGroundwaterAbstraction,nonFossilGroundwaterAbstraction,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,precipitation,referencePotET
outMonthAvgNC = snowCoverSWE,satDegUpp,satDegLow,discharge,gwRecharge,temperature,snowFreeWater,totalWaterStorageThickness
outMonthEndNC = interceptStor,storUppTotal,storLowTotal,storGroundwaterFossil,surfaceWaterStorage,topWaterLayer,storGroundwater,satDegUpp,satDegLow

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True
